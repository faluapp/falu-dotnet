using System;

namespace Falu.Payments
{
    /// <summary>
    /// Details about an MPESA Payment
    /// </summary>
    public class PaymentMpesaDetails
    {
        /// <summary>
        /// The target business short code
        /// </summary>
        public string BusinessShortCode { get; set; }

        /// <summary>
        /// Unique identifier for request as issued by MPESA.
        /// Only populated for flows that initiate the transaction instead of MPESA.
        /// The value is only availble after the request is sent to MPESA.
        /// </summary>
        public string RequestId { get; set; }

        #region Incoming

        /// <summary>
        /// Type of payment. Only populated for incoming payments.
        /// For internal use only.
        /// </summary>
        public string PaymentType { get; set; }

        /// <summary>
        /// Reference for the payment. Only populated for incoming payments.
        /// </summary>
        public string Reference { get; set; }

        /// <summary>
        /// Phone number for the payment, in <see href="https://en.wikipedia.org/wiki/MSISDN">MSISDN format</see>.
        /// Only populated for incoming payments.
        /// </summary>
        public string MSISDN { get; set; }

        /// <summary>
        /// Time at which the STK Push was initiated. Only populated for incoming payments.
        /// </summary>
        public DateTimeOffset? Initiated { get; set; }

        /// <summary>
        /// Time at which the payment validation was requested. Only populated for incoming payments.
        /// </summary>
        public DateTimeOffset? Validated { get; set; }

        /// <summary>
        /// Whether the payment was marked as valid. Only populated for incoming payments.
        /// </summary>
        public bool? Valid { get; set; }

        /// <summary>
        /// The name of the entity making the payment. Only populated for incoming payments.
        /// </summary>
        public string Payer { get; set; }

        #endregion

        #region Outgoing

        /// <summary>
        /// Destination of where the payment is/was sent to. Only populated for outgoing payments.
        /// </summary>
        public string Destination { get; set; }

        /// <summary>
        /// Type of command. Only populated for outgoing payments.
        /// For internal use only.
        /// </summary>
        public string CommandType { get; set; }

        /// <summary>
        /// Charges for the transaction in the smallest currency unit.
        /// Only populated for outgoing payments.
        /// </summary>
        public long? Charges { get; set; }

        /// <summary>
        /// Details of the receiver. Only populated for outgoing payments.
        /// </summary>
        public string ReceiverDetails { get; set; }

        /// <summary>
        /// Time at which the transaction failed. Only populated for outgoing payments.
        /// </summary>
        public DateTimeOffset? Failed { get; set; }

        /// <summary>
        /// The message from the transaction, usually extracted from the result description.
        /// This changes over the lifecycle of the transaction to keep only the latest one.
        /// </summary>
        public string Message { get; set; }

        #endregion

        /// <summary>
        /// Unique transaction identifier generated by MPESA for this transaction.
        /// Only populated for completed transactions.
        /// </summary>
        public string TransactionNo { get; set; }

        /// <summary>
        /// Time at which the transaction was successfully completed.
        /// </summary>
        public DateTimeOffset? Completed { get; set; }
    }
}
